// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: recommend.proto

package recommendservice

import (
	"context"

	"mall/recommend/mall/recommend"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ProductBrief      = recommend.ProductBrief
	RecommendRequest  = recommend.RecommendRequest
	RecommendResponse = recommend.RecommendResponse

	RecommendService interface {
		// 根据用户ID推荐商品列表
		RecommendProducts(ctx context.Context, in *RecommendRequest, opts ...grpc.CallOption) (*RecommendResponse, error)
	}

	defaultRecommendService struct {
		cli zrpc.Client
	}
)

func NewRecommendService(cli zrpc.Client) RecommendService {
	return &defaultRecommendService{
		cli: cli,
	}
}

// 根据用户ID推荐商品列表
func (m *defaultRecommendService) RecommendProducts(ctx context.Context, in *RecommendRequest, opts ...grpc.CallOption) (*RecommendResponse, error) {
	client := recommend.NewRecommendServiceClient(m.cli.Conn())
	return client.RecommendProducts(ctx, in, opts...)
}
