// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: user.proto

package server

import (
	"context"

	"mall/user/internal/logic"
	"mall/user/internal/svc"
	"mall/user/mall/user"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

// 用户注册
func (s *UserServiceServer) Register(ctx context.Context, in *user.RegisterRequest) (*user.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

// 用户登录
func (s *UserServiceServer) Login(ctx context.Context, in *user.LoginRequest) (*user.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

// 获取用户详情
func (s *UserServiceServer) GetUser(ctx context.Context, in *user.GetUserRequest) (*user.UserInfo, error) {
	l := logic.NewGetUserLogic(ctx, s.svcCtx)
	return l.GetUser(in)
}

// 更新用户信息
func (s *UserServiceServer) UpdateUser(ctx context.Context, in *user.UpdateUserRequest) (*user.Empty, error) {
	l := logic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}

// 列出用户（管理员用）
func (s *UserServiceServer) ListUsers(ctx context.Context, in *user.ListUsersRequest) (*user.ListUsersResponse, error) {
	l := logic.NewListUsersLogic(ctx, s.svcCtx)
	return l.ListUsers(in)
}
