// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: cart.proto

package cartservice

import (
	"context"

	"mall/cart/mall/cart"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddItemRequest    = cart.AddItemRequest
	CartItem          = cart.CartItem
	ClearCartRequest  = cart.ClearCartRequest
	Empty             = cart.Empty
	ListItemsRequest  = cart.ListItemsRequest
	ListItemsResponse = cart.ListItemsResponse
	RemoveItemRequest = cart.RemoveItemRequest

	CartService interface {
		AddItem(ctx context.Context, in *AddItemRequest, opts ...grpc.CallOption) (*Empty, error)
		RemoveItem(ctx context.Context, in *RemoveItemRequest, opts ...grpc.CallOption) (*Empty, error)
		ListItems(ctx context.Context, in *ListItemsRequest, opts ...grpc.CallOption) (*ListItemsResponse, error)
		ClearCart(ctx context.Context, in *ClearCartRequest, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultCartService struct {
		cli zrpc.Client
	}
)

func NewCartService(cli zrpc.Client) CartService {
	return &defaultCartService{
		cli: cli,
	}
}

func (m *defaultCartService) AddItem(ctx context.Context, in *AddItemRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.AddItem(ctx, in, opts...)
}

func (m *defaultCartService) RemoveItem(ctx context.Context, in *RemoveItemRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.RemoveItem(ctx, in, opts...)
}

func (m *defaultCartService) ListItems(ctx context.Context, in *ListItemsRequest, opts ...grpc.CallOption) (*ListItemsResponse, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.ListItems(ctx, in, opts...)
}

func (m *defaultCartService) ClearCart(ctx context.Context, in *ClearCartRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.ClearCart(ctx, in, opts...)
}
