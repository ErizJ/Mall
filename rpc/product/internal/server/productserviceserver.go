// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: product.proto

package server

import (
	"context"

	"mall/rpc/product/internal/logic"
	"mall/rpc/product/internal/svc"
	"mall/rpc/product/pb"
)

type ProductServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedProductServiceServer
}

func NewProductServiceServer(svcCtx *svc.ServiceContext) *ProductServiceServer {
	return &ProductServiceServer{
		svcCtx: svcCtx,
	}
}

// 商品列表，分页查询
func (s *ProductServiceServer) ListProducts(ctx context.Context, in *pb.ListProductsRequest) (*pb.ListProductsResponse, error) {
	l := logic.NewListProductsLogic(ctx, s.svcCtx)
	return l.ListProducts(in)
}

// 获取单个商品详情
func (s *ProductServiceServer) GetProduct(ctx context.Context, in *pb.GetProductRequest) (*pb.Product, error) {
	l := logic.NewGetProductLogic(ctx, s.svcCtx)
	return l.GetProduct(in)
}

// 创建商品
func (s *ProductServiceServer) CreateProduct(ctx context.Context, in *pb.CreateProductRequest) (*pb.Product, error) {
	l := logic.NewCreateProductLogic(ctx, s.svcCtx)
	return l.CreateProduct(in)
}

// 更新商品
func (s *ProductServiceServer) UpdateProduct(ctx context.Context, in *pb.UpdateProductRequest) (*pb.Empty, error) {
	l := logic.NewUpdateProductLogic(ctx, s.svcCtx)
	return l.UpdateProduct(in)
}

// 删除商品
func (s *ProductServiceServer) DeleteProduct(ctx context.Context, in *pb.DeleteProductRequest) (*pb.Empty, error) {
	l := logic.NewDeleteProductLogic(ctx, s.svcCtx)
	return l.DeleteProduct(in)
}
